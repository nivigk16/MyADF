{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Sanadsahu"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SalesorderData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderDetailID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "nvarchar"
					},
					{
						"name": "OrderQty",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductCategoryId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SpecialOfferID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LineTotal",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DataSource",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "SalesOrderDetail"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SendFilesViaMail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "az-filecopy-dest"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StateRef')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "State",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Zipcode.xlsx",
						"fileSystem": "fslearnadf"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "StateId",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Fips",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StateRefTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "StateId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StateCode",
						"type": "varchar"
					},
					{
						"name": "StateName",
						"type": "varchar"
					},
					{
						"name": "Fips",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "States"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnCategorizedProduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "MakeFlag",
						"type": "bit"
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "bit"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "DaysToManufacture",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nchar"
					},
					{
						"name": "Class",
						"type": "nchar"
					},
					{
						"name": "Style",
						"type": "nchar"
					},
					{
						"name": "ProductSubcategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnCategorizedProduct"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnZippedFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"UnzipFolderName": {
						"type": "String"
					},
					"Container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().UnzipFolderName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UncleanedFuzzySrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "uszips.csv",
						"fileSystem": "fslearnadf"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "zip",
						"type": "String"
					},
					{
						"name": "lat",
						"type": "String"
					},
					{
						"name": "lng",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "state_id",
						"type": "String"
					},
					{
						"name": "state_name",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "density",
						"type": "String"
					},
					{
						"name": "county_fips",
						"type": "String"
					},
					{
						"name": "county_name",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipCodeReftarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ZipCodeId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ZipTypeId",
						"type": "char"
					},
					{
						"name": "PrevalentCounty",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Latitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Longitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CityName",
						"type": "varchar"
					},
					{
						"name": "CityTypeId",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ZipCode"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipCodeSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "ZipCode",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Zipcode.xlsx",
						"fileSystem": "fslearnadf"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "ZipCodeId",
						"type": "String"
					},
					{
						"name": "ZipTypeId",
						"type": "String"
					},
					{
						"name": "PrevalentCounty",
						"type": "String"
					},
					{
						"name": "Latitude",
						"type": "String"
					},
					{
						"name": "Longitude",
						"type": "String"
					},
					{
						"name": "CityName",
						"type": "String"
					},
					{
						"name": "CityTypeId",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipDest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CompressedFile.zip",
						"container": "az-blob-test"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "az-filecopy-dest"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CompressedFile.zip",
						"container": "az-blob-test"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipSource_ProductSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SalesOrderDetail_Yearly.zip",
						"folderPath": "InputRawFiles",
						"container": "product-data-processing"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFileFromBlobtoADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ReadFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStorage",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceFolder",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ReadFileList",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadFileList').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyFileToDest",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "BinaryDataSource_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStorage",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceFolder",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestStorage",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestFloder",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "NotifySuccess",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEachFile",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-15.northcentralus.logic.azure.com:443/workflows/71af0a54b69d433f90d1bba754f7a129/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=37iH5XGFwZKEZBsCdFfNOGOtzd8mlc3ZucnO8HgjEaw",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"body": {
								"value": "{\n\"pipelinename\":\"@{pipeline().Pipeline}\",\n\"Filepath\": \"@{pipeline().parameters.DestStorage}\",\n\"To\":\"@{variables('ToAddress')}\",\n\"CC\":\"@{variables('CCAddress')}\",\n\"Subject\":\"@{variables('MailSubject')}\",\n\"MailBody\":\"@{variables('MailBody')}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceStorage": {
						"type": "string",
						"defaultValue": "az-filecopy-dest"
					},
					"SourceFolder": {
						"type": "string"
					},
					"DestStorage": {
						"type": "string",
						"defaultValue": "az-blob-test"
					},
					"DestFloder": {
						"type": "string"
					}
				},
				"variables": {
					"ToAddress": {
						"type": "String",
						"defaultValue": "nivethaselvaraj97@gmail.com"
					},
					"CCAddress": {
						"type": "String",
						"defaultValue": "manikanta04578@gmail.com"
					},
					"MailBody": {
						"type": "String",
						"defaultValue": "The file copy process executed successfully"
					},
					"MailSubject": {
						"type": "String",
						"defaultValue": "FileCopy PipelineRun Succeeded"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-07T04:43:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetProductDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetProductDetails",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_findproductdetails]",
							"storedProcedureParameters": {
								"ProductCategory": {
									"value": {
										"value": "@pipeline().parameters.catname",
										"type": "Expression"
									},
									"type": "String"
								},
								"productid": {
									"value": {
										"value": "@pipeline().parameters.ProductId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"productidOut": {
									"value": {
										"value": "@pipeline().parameters.Outprodid",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"ProductSubCategory": {
									"value": {
										"value": "@pipeline().parameters.subcatname",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_findproductdetails]",
								"storedProcedureParameters": {
									"ProductCategory": {
										"type": "String",
										"value": null
									},
									"productid": {
										"type": "Int32",
										"value": "210"
									},
									"productidOut": {
										"type": "Int32",
										"value": null
									},
									"ProductSubCategory": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadUncommitted",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DSFromSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "EXEC dbo.usp_findproductdetails 210,@productidOut,@ProductSubCategory,@ProductCategory OUTPUT",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DSFromSP",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ProductId": {
						"type": "int"
					},
					"Outprodid": {
						"type": "int"
					},
					"catname": {
						"type": "string"
					},
					"subcatname": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-07T04:43:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadFileProcessingInfo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ReadFileInfo",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadFileInfo').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Json1",
											"type": "DatasetReference",
											"parameters": {}
										},
										"fieldList": [
											{
												"value": "@item().name",
												"type": "Expression"
											}
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "JsonReadSettings"
										}
									}
								},
								{
									"name": "Lookup1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "insert into dbo.FileProcessing(ProcessingFilename,ProcessingFileType,FileSourceContainer\n,FileSourceDirectory)SELECT '@{item().name}','@{item().type}','@{pipeline().parameters.ContainerName}','@{pipeline().parameters.FolderName}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "ReadFileInfo",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadFileInfo').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@not(empty(activity('ReadFileInfo').output))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FolderName": {
						"type": "string",
						"defaultValue": "fslearnadf"
					},
					"ContainerName": {
						"type": "string",
						"defaultValue": "dllearnadf"
					}
				},
				"variables": {
					"PipelineRunId": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					},
					"FileType": {
						"type": "String"
					},
					"FileLastModified": {
						"type": "String"
					},
					"ContainerName": {
						"type": "String"
					},
					"FolderName": {
						"type": "String"
					},
					"ExecutionTime": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-07T04:43:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SendMailNotification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ReadFileList",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SendFilesViaMail",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFileInDir",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ReadFileList",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadFileList').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "ReadFileFullPath",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "FullFilePath",
										"value": {
											"value": "item().name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SendMailViaLogicApp",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "ReadFileFullPath",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": "https://prod-27.northcentralus.logic.azure.com:443/workflows/d3aec39714e74bde9156bdb20168fdf8/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=Rr8z5jrUNEaymqQ5DcFDqJHNsJJjTztiDracFBT6QIs",
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"body": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FullFilePath": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-07T04:43:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SendFilesViaMail')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipAndUnZipFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ZipFiles",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ZipFiles",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ZipDest",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UnZip",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ZipSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ExtractToADLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SendMail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-19.northcentralus.logic.azure.com:443/workflows/e832ef40b4084c7e8e5a45f0a5dc5834/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=zJ7cwhiLvMPAjsvXq93MkV6Xp7eK4nuBtGXzVszNrPk",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"body": {
								"value": "{\n        \"Pipelinename\":\"@{pipeline().Pipeline}\",\n        \"Conatinername\":\"@{pipeline().parameters.ContainerName}\",\n        \"AttachmentFilepath\": \"@{variables('FilePath')}\",\n        \"ToAddress\": \"@{variables('ToAddress')}\",\n        \"CCAddress\":\"@{variables('CCAddress')}\",\n        \"Mailsubject\":\"@{variables('MailSubject')}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ZipFiles",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FilePath",
							"value": {
								"value": "@concat('/',pipeline().parameters.ContainerName,'/',pipeline().parameters.ZipFileName)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ContainerName": {
						"type": "string",
						"defaultValue": "az-blob-test"
					},
					"FilePath": {
						"type": "string",
						"defaultValue": "/az-blob-test/CompressedFile.zip"
					},
					"ZipFileName": {
						"type": "string",
						"defaultValue": "CompressedFile.zip"
					},
					"StorageAcc": {
						"type": "string",
						"defaultValue": "learnadfdemo"
					}
				},
				"variables": {
					"ToAddress": {
						"type": "String",
						"defaultValue": "naveenmech047@outlook.com"
					},
					"CCAddress": {
						"type": "String",
						"defaultValue": "selvarajnivetha97@outlook.com"
					},
					"MailSubject": {
						"type": "String",
						"defaultValue": "File Copied successfully"
					},
					"FilePath": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-07T04:43:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ZipFiles')]",
				"[concat(variables('factoryId'), '/datasets/ZipDest')]",
				"[concat(variables('factoryId'), '/datasets/ZipSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssertDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sourceFinanceTbl"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlValidData",
								"type": "DatasetReference"
							},
							"name": "sinkValidRows"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlErrorUnitsData",
								"type": "DatasetReference"
							},
							"name": "sinkErrorRows"
						}
					],
					"transformations": [
						{
							"name": "UnitSoldAssert"
						},
						{
							"name": "SetErrorRowFlags"
						},
						{
							"name": "SplitRows"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Segment as string,",
						"          Country as string,",
						"          Product as string,",
						"          DiscountBand as string,",
						"          UnitsSold as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sourceFinanceTbl",
						"sourceFinanceTbl assert(expectTrue(UnitsSold>=1000, false, 'UnitsSoldAssert', null, \"The unit sold sholud be greater than 999\")) ~> UnitSoldAssert",
						"UnitSoldAssert derive(IsErrorUnits = isError()) ~> SetErrorRowFlags",
						"SetErrorRowFlags split(IsErrorUnits==false(),",
						"     disjoint: false) ~> SplitRows@(ValidRows, ErrorRows)",
						"SplitRows@ValidRows sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Segment as string,",
						"          Country as string,",
						"          Product as string,",
						"          DiscountBand as string,",
						"          UnitsSold as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Segment,",
						"          Country,",
						"          Product,",
						"          DiscountBand,",
						"          UnitsSold",
						"     )) ~> sinkValidRows",
						"SplitRows@ErrorRows sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Segment as string,",
						"          Country as string,",
						"          Product as string,",
						"          DiscountBand as string,",
						"          UnitsSold as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Segment,",
						"          Country,",
						"          Product,",
						"          DiscountBand,",
						"          UnitsSold",
						"     )) ~> sinkErrorRows"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Derivedcol')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "getCurrentDate"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Segment as string,",
						"          Country as string,",
						"          Product as string,",
						"          DiscountBand as string,",
						"          UnitsSold as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(InsertDate = currentDate()) ~> getCurrentDate",
						"getCurrentDate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FinanceRowNum as integer,",
						"          Segment as string,",
						"          County as string,",
						"          Product as string,",
						"          UnitSold as integer,",
						"          InsertDate as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'single',",
						"     reportSuccessOnError: false,",
						"     outputAssertFailedRows: true,",
						"     mapColumn(",
						"          Segment,",
						"          County = Country,",
						"          Product,",
						"          UnitSold = UnitsSold,",
						"          InsertDate",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		}
	]
}