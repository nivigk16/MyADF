{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable4",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "Assert1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Segment as string,",
				"          Country as string,",
				"          Product as string,",
				"          DiscountBand as string,",
				"          UnitsSold as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 assert(expectTrue(UnitsSold<1000, false, 'assert1')) ~> Assert1",
				"Assert1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Segment as string,",
				"          Country as string,",
				"          Product as string,",
				"          DiscountBand as string,",
				"          UnitsSold as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'allErrors',",
				"     transactionCommit: 'single',",
				"     reportSuccessOnError: false,",
				"     outputAssertFailedRows: true,",
				"     assertFailure_container: 'az-blob-test',",
				"     ignoreAssertFailedRows: true,",
				"     mapColumn(",
				"          Segment,",
				"          Country,",
				"          Product,",
				"          DiscountBand,",
				"          UnitsSold",
				"     )) ~> sink1"
			]
		}
	}
}